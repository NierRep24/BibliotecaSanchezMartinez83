// <auto-generated />
using System;
using BibliotecaDanielSanchez83.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BibliotecaDanielSanchez83.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BibliotecaDanielSanchez83.Models.Domain.Autor", b =>
                {
                    b.Property<int>("PkAutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkAutor"));

                    b.Property<string>("Biografia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkAutor");

                    b.ToTable("Autor");

                    b.HasData(
                        new
                        {
                            PkAutor = 1,
                            Biografia = "Escritor colombiano, ganador del Premio Nobel de Literatura en 1982.",
                            Nombre = "Gabriel García Márquez"
                        },
                        new
                        {
                            PkAutor = 2,
                            Biografia = "Autora británica conocida por la serie de libros de Harry Potter.",
                            Nombre = "J.K. Rowling"
                        });
                });

            modelBuilder.Entity("BibliotecaDanielSanchez83.Models.Domain.Categoria", b =>
                {
                    b.Property<int>("PkCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkCategoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkCategoria");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            PkCategoria = 1,
                            Nombre = "Ciencia Ficción"
                        },
                        new
                        {
                            PkCategoria = 2,
                            Nombre = "Drama"
                        },
                        new
                        {
                            PkCategoria = 3,
                            Nombre = "Fantasía"
                        });
                });

            modelBuilder.Entity("BibliotecaDanielSanchez83.Models.Domain.Libro", b =>
                {
                    b.Property<int>("PkLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkLibro"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FechaPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("FkAutor")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkLibro");

                    b.HasIndex("FkAutor");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            PkLibro = 1,
                            Descripcion = "Una obra maestra de la literatura latinoamericana.",
                            Fecha = new DateTime(2025, 3, 11, 18, 59, 32, 16, DateTimeKind.Utc).AddTicks(9210),
                            FechaPublicacion = 1967,
                            FkAutor = 1,
                            Titulo = "Cien Años de Soledad"
                        },
                        new
                        {
                            PkLibro = 2,
                            Descripcion = "El primer libro de la saga de Harry Potter, un niño mago que descubre su verdadero destino.",
                            Fecha = new DateTime(2025, 3, 11, 18, 59, 32, 16, DateTimeKind.Utc).AddTicks(9214),
                            FechaPublicacion = 1997,
                            FkAutor = 2,
                            Titulo = "Harry Potter y la Piedra Filosofal"
                        });
                });

            modelBuilder.Entity("BibliotecaDanielSanchez83.Models.Domain.LibroCategoria", b =>
                {
                    b.Property<int>("PkLibro")
                        .HasColumnType("int");

                    b.Property<int>("PkCategoria")
                        .HasColumnType("int");

                    b.HasKey("PkLibro", "PkCategoria");

                    b.HasIndex("PkCategoria");

                    b.ToTable("LibroCategorias");

                    b.HasData(
                        new
                        {
                            PkLibro = 1,
                            PkCategoria = 1
                        },
                        new
                        {
                            PkLibro = 1,
                            PkCategoria = 2
                        },
                        new
                        {
                            PkLibro = 2,
                            PkCategoria = 3
                        });
                });

            modelBuilder.Entity("BibliotecaDanielSanchez83.Models.Domain.Rol", b =>
                {
                    b.Property<int>("PkRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkRol"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkRol");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            PkRol = 1,
                            Nombre = "Administrador"
                        },
                        new
                        {
                            PkRol = 2,
                            Nombre = "Usuario"
                        });
                });

            modelBuilder.Entity("BibliotecaDanielSanchez83.Models.Domain.Usuario", b =>
                {
                    b.Property<int>("PkUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkUsuario"));

                    b.Property<int>("FkRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkUsuario");

                    b.HasIndex("FkRol");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            PkUsuario = 1,
                            FkRol = 1,
                            Nombre = "Administrador",
                            Password = "admin123",
                            UserName = "admin"
                        },
                        new
                        {
                            PkUsuario = 2,
                            FkRol = 2,
                            Nombre = "Usuario Normal",
                            Password = "user123",
                            UserName = "user1"
                        });
                });

            modelBuilder.Entity("BibliotecaDanielSanchez83.Models.Domain.Libro", b =>
                {
                    b.HasOne("BibliotecaDanielSanchez83.Models.Domain.Autor", "Autor")
                        .WithMany("Libros")
                        .HasForeignKey("FkAutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("BibliotecaDanielSanchez83.Models.Domain.LibroCategoria", b =>
                {
                    b.HasOne("BibliotecaDanielSanchez83.Models.Domain.Categoria", "Categoria")
                        .WithMany("LibroCategorias")
                        .HasForeignKey("PkCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BibliotecaDanielSanchez83.Models.Domain.Libro", "Libro")
                        .WithMany("LibroCategorias")
                        .HasForeignKey("PkLibro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("BibliotecaDanielSanchez83.Models.Domain.Usuario", b =>
                {
                    b.HasOne("BibliotecaDanielSanchez83.Models.Domain.Rol", "Roles")
                        .WithMany()
                        .HasForeignKey("FkRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("BibliotecaDanielSanchez83.Models.Domain.Autor", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("BibliotecaDanielSanchez83.Models.Domain.Categoria", b =>
                {
                    b.Navigation("LibroCategorias");
                });

            modelBuilder.Entity("BibliotecaDanielSanchez83.Models.Domain.Libro", b =>
                {
                    b.Navigation("LibroCategorias");
                });
#pragma warning restore 612, 618
        }
    }
}
